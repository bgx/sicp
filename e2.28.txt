2017.08.16 Wednesday
e2.28

>>

(define (fringe items)
  (cond ((null? items) items)
        ((not (pair? items)) (list items))
        (else (append (fringe (car items)) (fringe (cdr items))))))

>>

Or, if you want to have a strict precondition that items must be a list...

(define (fringe2 items)
  (cond ((not (list? items)) (display "error"))
        ((null? items) items)
        ((not (pair? (car items))) 
              (append (list (car items)) (fringe2 (cdr items))))
        (else 
              (append (fringe2 (car items)) (fringe2 (cdr items))))))

>>>

> (define x (list (list 1 2) (list 3 4)))
> (fringe x)
{1 2 3 4}
> (fringe (list x x))
{1 2 3 4 1 2 3 4}

> (define x (list 1 2 3))
(define y (list 4 5 6)) 
> (fringe (list (list x y) x (list y)))
{1 2 3 4 5 6 1 2 3 4 5 6}

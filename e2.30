2017.08.17 Thursday
e2.30

>>

(define (square-tree-nomap tree)
  (cond ((null? tree) tree)
        ((not (pair? tree)) (square tree))
        (else (cons (square-tree-nomap (car tree)) (square-tree-nomap (cdr tree))))))

(define (square-tree-map tree)
  (map (lambda (sub-tree) 
         (if (pair? sub-tree) 
             (square-tree-map sub-tree)
             (square sub-tree)))
       tree))

>>>

> (define x (list 1 (list 2 (list 3 4) 5) (list 6 7)))
> (square-tree-nomap x)
{1 {4 {9 16} 25} {36 49}}
> (square-tree-map x)
{1 {4 {9 16} 25} {36 49}}

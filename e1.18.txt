2017.01.12 Thursday
e1.18

>>

(define (even? n)
  (= (remainder n 2) 0))

(define (double x)
  (* 2 x))

(define (halve x)
  (/ x 2))

(define (fast-mult-iter a b r)
  (cond ((= b 0) r)
        ((even? b) (fast-mult-iter (double a) (halve b) r))
        (else (fast-mult-iter a (- b 1) (+ r a)))))

(define (fast-mult a b)
  (fast-mult-iter a b 0))
